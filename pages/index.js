import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '../styles/Home.module.css'

import TimeAgo from 'javascript-time-ago'
import useSWR from 'swr'
import dynamic from 'next/dynamic'
// English.
import en from 'javascript-time-ago/locale/en'
import React from 'react'

TimeAgo.addDefaultLocale(en)

// Create formatter (English).
const timeAgo = new TimeAgo('en-US')


const inter = Inter({ subsets: ['latin'] })




const Chart = dynamic(() => import("react-apexcharts"), { ssr: false }) ;

export default function Home() {

  const { data: report } = useSWR('https://iot-node-felixtran2000.vercel.app/api/v1/report', async (url) => {
    let data = await fetch(url).then(res => res.json())
    return data
  })

  const { data: history } = useSWR('https://iot-node-felixtran2000.vercel.app/api/v1/history', async (url) => {
    let data = await fetch(url).then(res => res.json())
    return data
  })


  const getData = React.useCallback(() => {
    let _data = Array.from({length: 24}, (_, i) => i)
    if(!report?.length){
      return _data
    }
   
    let data = _data?.map(i => {
      let hour = report?.find(item => `${item.hour}` == `${i}`)
     
      if(hour){
        return hour?._count?._all
      }
      else{
        return 0
      }
    })


    return data
  }, [report])


  console.log(report, getData())
 

  return (
    <>
      <Head>
        <title>IOT WEB</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h3>Motion Detection Device</h3>
        <br />
        <div style={{ width: '80vw', padding: '1.2em', borderRadius: 15, background: "rgba(255,255,255,3)" }}>
          <h4 style={{ color: "#ff1010" }}>Last detection</h4>
          {/* {history?.[0]?.createdAt} */}
          <h1 style={{ fontWeight: 300 }}>{history?.[0]?.createdAt && timeAgo.format(new Date(history?.[0]?.createdAt))}</h1>
        </div>
        <br />
        <div style={{ width: "100%", display: "flex", flexWrap:"wrap", gap: 10 }}>


          <div style={{ padding: '1.2em', borderRadius: 15, background: "rgba(255,255,255,3)" }}>
            <p>Recent History</p>
            <br />
            <div>
              {history?.map(item => <div style={{ fontSize: "small" }} key={item.id}>
                <span>{timeAgo.format(new Date(item?.createdAt))}</span>
              </div>)}
            </div>
          </div>

          <div style={{  flex:1, padding:20, borderRadius: 15, background: "rgba(255,255,255,3)" }}>
            <p>Last 24 hours</p>
            <Chart 
            width={'100%'}
            height={'100%'}
            type='bar'
            series={[
              {
                name: "count",
                data: getData()
              }
            ]}
            options={{
              chart: {
                id: "basic-bar"
              },
              xaxis: {
                categories: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]
              }
            }}></Chart>
          </div>
          <div>

          </div>
        </div>
      </main>
    </>
  )
}
